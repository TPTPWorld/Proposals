A collection of very simple choice problems - mainly for sanity-checking purposes. Provided
is a short explanation for each problem:

choice1.p:
The axiom of (higher-order) choice for natural numbers and finite sets.

dskolem1.p:
A generalization of the above for arbitrary types.

dchoice_choice_def1.p:
Given there is an element x of type (fin 2) that is in the predicate p, the choice operator can
find an element of fin 2 that makes said predicate true.
I.e. the definition of choice in the specific instance of finite sets of size 2.

dchoice_choice_def2.p:
A generalization of the above to elements of type (fin N) where N is a natural number.

dchoice_choice_def3.p:
A generalization of the above to elements of any dependent type.

dchoice_choice_eq1.p:
Picking an element using the choice operator, such that it is equal to a certain element of
type (fin 1), yields this exact element.
I.e. choice respects identity for the type (fin 1).

dchoice_choice_eq2.p:
An alternative of the above for the type (fin 2).

dchoice_choice_nq.p:
Establishes that there are at least two distinct elements in (fin 2) and that choice can
indentify them.

fin2swap1.p:
Defines a swap operator on the type of sets of size 2, using the choice operator and in each
case returning the other element.
The conjecture establishes correctness of the operator.

fin2nofp.p:
A variant of the above without the explicit definition of the swap function, stating that there
exists such a function that it always returns the other element.

fin2swap1lem.p:
A lemma of the above, stating that for all elements in (fin 2) there exists at least one
element different from it.
